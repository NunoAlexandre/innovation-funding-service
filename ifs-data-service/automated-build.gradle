ext.ifsDatasourceUrl=""
ext.ifsDatasourceUsername=""
ext.ifsDatasourcePassword=""
ext.ifsFlywayLocations=""

ext.testIfsDatasourceUrl="jdbc:mysql://127.0.0.1:3306/ifs_test"
ext.testIfsDatasourceUsername="ifs"
ext.testIfsDatasourcePassword="ifs"
ext.testIfsFlywayLocations="db/migration,db/setup,db/integration"

project.ext['flyway.url']='jdbc:mysql://127.0.0.1:3306?characterEncoding=utf8'
project.ext['flyway.schemas']='ifs,ifs_test'
project.ext['flyway.user']='ifs'
project.ext['flyway.password']="ifs"
project.ext['flyway.placeholderPrefix']='_${'
project.ext['flyway.placeholderSuffix']='}'

ext.silRestBaseURL="http://localhost:8080/silstub"

//
// The production application will use the SIL to send emails out.  For non-production environments, the IFS application
// can talk to a SIL stub within the IFS application itself.  The below configuration allows you to configure whether or
// not the stub will attempt to send emails out via an SMTP server, or simply log the emails being sent (it does this
// regardless)
//
ext.ifsSendMailLocally=""
ext.ifsSmtpHost=""
ext.ifsSmtpPort=""
ext.ifsSmtpUser=""
ext.ifsSmtpAuth=""
ext.ifsSmtpPassword=""
ext.ifsSmtpTlsEnabled=""
ext.ifsMailTimeoutMillis=""

ext.idpRestBaseURL=""

ext.ifsDataServiceRestBaseURL="http://localhost:8080"

ext.postcodeLookupKey=""

// Choose an appropriate location for a location to store uploaded files.
// It is an OS-specific path, so choose the appropriate format depending on
// whether you're on a *nix OS or a Windows OS.
//
// Note the 4 backslashes in Windows paths (this is to preserve the backslashes
// so they are retained in application.properties during the processResource task)
ext.ifsFileStorageLocation="/tmp"

ext.ifsWebBaseURL="http://localhost:8080"

ext.serverPort=""
ext.springProfiles="environment"
ext.tomcatWebAppsDir=""
ext.shibbolethDir=""