apiVersion: v1
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: admin
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: enmobile/docker-spring-boot-admin
      from:
        kind: DockerImage
        name: enmobile/docker-spring-boot-admin
      generation: null
      importPolicy: {}
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: admin
  spec:
    replicas: 1
    selector:
      deploymentconfig: admin
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: admin
      spec:
        containers:
        - image: enmobile/docker-spring-boot-admin
          name: admin
          ports:
          - containerPort: 8123
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - admin
        from:
          kind: ImageStreamTag
          name: admin:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: application-service
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: worth/application-service:1.0-SNAPSHOT
      from:
        kind: DockerImage
        name: worth/application-service:1.0-SNAPSHOT
      generation: null
      importPolicy: {}
      name: 1.0-SNAPSHOT
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: application-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: application-service
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: application-service
      spec:
        containers:
        - image: worth/application-service:1.0-SNAPSHOT
          name: application-service
          ports:
          - containerPort: 8080
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - application-service
        from:
          kind: ImageStreamTag
          name: application-service:1.0-SNAPSHOT
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: assessment-service
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: worth/assessment-service:1.0-SNAPSHOT
      from:
        kind: DockerImage
        name: worth/assessment-service:1.0-SNAPSHOT
      generation: null
      importPolicy: {}
      name: 1.0-SNAPSHOT
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: assessment-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: assessment-service
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: assessment-service
      spec:
        containers:
        - image: worth/assessment-service:1.0-SNAPSHOT
          name: assessment-service
          ports:
          - containerPort: 8080
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - assessment-service
        from:
          kind: ImageStreamTag
          name: assessment-service:1.0-SNAPSHOT
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: competition-mgt-service
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: worth/competition-management-service:1.0-SNAPSHOT
      from:
        kind: DockerImage
        name: worth/competition-management-service:1.0-SNAPSHOT
      generation: null
      importPolicy: {}
      name: 1.0-SNAPSHOT
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: competition-mgt-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: competition-mgt-service
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: competition-mgt-service
      spec:
        containers:
        - image: worth/competition-management-service:1.0-SNAPSHOT
          name: competition-mgt-service
          ports:
          - containerPort: 8080
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - competition-mgt-service
        from:
          kind: ImageStreamTag
          name: competition-mgt-service:1.0-SNAPSHOT
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: data
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: worth/data-service:1.0-SNAPSHOT
      from:
        kind: DockerImage
        name: worth/data-service:1.0-SNAPSHOT
      generation: null
      importPolicy: {}
      name: 1.0-SNAPSHOT
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: data
  spec:
    replicas: 1
    selector:
      deploymentconfig: data
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: data
      spec:
        containers:
        - image: worth/data-service:1.0-SNAPSHOT
          name: data
          ports:
          - containerPort: 8080
          resources: {}
          volumeMounts:
          - mountPath: /tmp/ifs-local
            name: dir-1
        volumes:
        - emptyDir: {}
          name: dir-1
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - data
        from:
          kind: ImageStreamTag
          name: data:1.0-SNAPSHOT
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: imap
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: camptocamp/courier-imap
      from:
        kind: DockerImage
        name: camptocamp/courier-imap
      generation: null
      importPolicy: {}
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: imap
  spec:
    replicas: 1
    selector:
      deploymentconfig: imap
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: imap
      spec:
        containers:
        - image: camptocamp/courier-imap
          name: imap
          ports:
          - containerPort: 143
          resources: {}
        - image: camptocamp/smtp-sink
          name: smtp
          resources: {}
        - image: camptocamp/sqwebmail
          name: webmail
          ports:
          - containerPort: 80
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - imap
        from:
          kind: ImageStreamTag
          name: imap:latest
      type: ImageChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - smtp
        from:
          kind: ImageStreamTag
          name: smtp:latest
      type: ImageChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - webmail
        from:
          kind: ImageStreamTag
          name: webmail:latest
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: smtp
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: camptocamp/smtp-sink
      from:
        kind: DockerImage
        name: camptocamp/smtp-sink
      generation: null
      importPolicy: {}
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: webmail
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: camptocamp/sqwebmail
      from:
        kind: DockerImage
        name: camptocamp/sqwebmail
      generation: null
      importPolicy: {}
      name: latest
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: mysql
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: mysql:5.5.49
      from:
        kind: DockerImage
        name: mysql:5.5.49
      generation: null
      importPolicy: {}
      name: 5.5.49
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: mysql
  spec:
    replicas: 1
    selector:
      deploymentconfig: mysql
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: mysql
      spec:
        containers:
        - env:
          - name: MYSQL_DATABASE
            value: ifs
          - name: MYSQL_ROOT_PASSWORD
            value: password
          image: mysql:5.5.49
          name: mysql
          ports:
          - containerPort: 3306
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:5.5.49
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: project-setup-mgt-service
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: worth/project-setup-management-service:1.0-SNAPSHOT
      from:
        kind: DockerImage
        name: worth/project-setup-management-service:1.0-SNAPSHOT
      generation: null
      importPolicy: {}
      name: 1.0-SNAPSHOT
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: project-setup-mgt-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: project-setup-mgt-service
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: project-setup-mgt-service
      spec:
        containers:
        - image: worth/project-setup-management-service:1.0-SNAPSHOT
          name: project-setup-mgt-service
          ports:
          - containerPort: 8080
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - project-setup-mgt-service
        from:
          kind: ImageStreamTag
          name: project-setup-mgt-service:1.0-SNAPSHOT
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: project-setup-service
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: worth/project-setup-service:1.0-SNAPSHOT
      from:
        kind: DockerImage
        name: worth/project-setup-service:1.0-SNAPSHOT
      generation: null
      importPolicy: {}
      name: 1.0-SNAPSHOT
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: project-setup-service
  spec:
    replicas: 1
    selector:
      deploymentconfig: project-setup-service
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: project-setup-service
      spec:
        containers:
        - image: worth/project-setup-service:1.0-SNAPSHOT
          name: project-setup-service
          ports:
          - containerPort: 8080
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - project-setup-service
        from:
          kind: ImageStreamTag
          name: project-setup-service:1.0-SNAPSHOT
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: shib
  spec:
    tags:
    - annotations:
        openshift.io/imported-from: worth/shibboleth:1.0-SNAPSHOT
      from:
        kind: DockerImage
        name: worth/shibboleth:1.0-SNAPSHOT
      generation: null
      importPolicy: {}
      name: 1.0-SNAPSHOT
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: shib
  spec:
    replicas: 1
    selector:
      deploymentconfig: shib
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: shib
      spec:
        containers:
        - image: worth/shibboleth:1.0-SNAPSHOT
          name: shib
          ports:
          - containerPort: 443
          - containerPort: 389
          resources: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - shib
        from:
          kind: ImageStreamTag
          name: shib:1.0-SNAPSHOT
      type: ImageChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: admin
  spec:
    ports:
    - name: 8123-tcp
      port: 8123
      targetPort: 8123
    selector:
      deploymentconfig: admin
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: application-service
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: application-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: assessment-service
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: assessment-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: competition-mgt-service
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: competition-mgt-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: data-service
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: data
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: imap
  spec:
    ports:
    - name: 80-tcp
      port: 80
      targetPort: 80
    - name: 143-tcp
      port: 143
      targetPort: 143
    selector:
      deploymentconfig: imap
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ifs-database
  spec:
    ports:
    - name: 3306-tcp
      port: 3306
      targetPort: 3306
    selector:
      deploymentconfig: mysql
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: project-setup-mgt-servic
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: project-setup-mgt-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: project-setup-service
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: project-setup-service
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: shib
  spec:
    ports:
    - name: 389-tcp
      port: 389
      targetPort: 389
    - name: 443-tcp
      port: 443
      targetPort: 443
    selector:
      deploymentconfig: shib
  status:
    loadBalancer: {}
kind: List
metadata: {}
