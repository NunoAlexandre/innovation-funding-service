{"version":3,"sources":["ifsCompetitionManagementLoader.js","multipageSelect.js","repeatableRows.js","setupRepeaters.js","compManagement.js","fundingInformation.js","initialDetails.js","milestones.js"],"names":["IFS","competitionManagement","loadOrder","common","init","various","finalize","multipageSelect","competition-management","repeatableRows","competition-setup","initialDetails","milestones","fundingInformation","repeater","core","finance","s","settings","multipageCheckboxEl","selectAllEl","countEl","submitEl","totalListSizeEl","totalListSize","this","parseInt","jQuery","attr","on","processMultipageCheckbox","getData","checked","value","isSelectAll","addAll","assessor","isSelected","checkbox","is","val","data","url","window","location","href","ajaxProtected","type","dataType","timeout","autoSave","ajaxTimeOut","done","result","changeAllCheckboxStates","selectedRows","selectionCount","updateCount","updateSubmitButton","changeSelectAllCheckboxState","fail","errorMessage","getErrorMessage","closest","find","append","count","button","length","removeProp","prop","text","selectAll","selectAllChecked","allCheckboxes","e","preventDefault","addRow","removeRow","el","target","uniqueRowId","children","newRow","first","focus","rows","$element","rowParent","remove","each","rowIndex","rowsInputs","$rowInput","newId","replace","newName","id","name","document","handleAddRow","handleRemoveRow","addCoFunder","addGuidanceRow","addInnovationAreaRow","addContentGroup","addDateContentGroup","trigger","inst","fieldChanged","reindexRows","disableAlreadySelectedOptions","autosaveInnovationAreaIds","rebindInnovationAreas","idCount","last","split","clone","removeClass","removeAttr","addClass","after","buttonEl","headerRequiredErrorMessage","contentRequiredErrorMessage","html","parent","before","initEditor","validDateErrorMessage","table","isAssessed","hasClass","rowSelector","indexOf","thisIndex","index","oldAttr","oldAttrName","oldAttrElement","editor","prepareEditorHTML","editorOptions","extend","plugins","hallolink","hallo","fundingDecisionSelects","assessorFeedbackButton","noJsAssessorFeedbackButton","submitFundingDecisionButton","noJsSubmitFundingDecisionButton","noJsSaveFundingDecisionButton","fundingDecisionForm","handleFundingDecisionEnableOrDisable","alterSubmitDecisionFormAction","disableFundingDecisonButton","modal","event","data-js-modal-disabled","aria-disabled","enableFundingDecisionButton","off","form","action","allSelectsDecided","selects","undefined","allDecided","decided","handleCompetitionCode","competitionId","field","protocol","host","success","formValidation","setValid","message","setInvalid","handleStateAid","handleInnovationSector","handleInnovationArea","unbind","multipleRowsButton","isShowingAll","hasAllInnovationArea","not","pageLoad","sector","innovationCategory","areas","filterInnovationAreasPageLoad","fillInnovationAreas","disabledSections","section","disabled","aria-hidden","currentAreas","innovationAreasFields","innovationAreasField","saveField","innovationAreas","unique","map","join","area","push","stateAid","milestonesForm","milestonesExtraValidation","milestonesSetFutureDate","mileStoneValidateOnPageLoad","fieldErrors","emptyInputs","filter","checkDate","setTimeout","time","currentRow","nextRow","next","date","data-future-date","trim","input"],"mappings":"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","file":"../ifs_modules/comp-management.min.js","sourcesContent":["/* jshint strict: false, undef: true, unused: true */\n\n// Dom based routing\n// ------------------\n// Based on Paul Irish' code, please read blogpost\n// http://www.paulirish.com/2009/markup-based-unobtrusive-comprehensive-dom-ready-execution///\n// Does 2 jobs:\n//    * Page dependend execution of functions\n//    * Gives a more fine-grained control in which order stuff is executed\n//\n// Adding a page dependend function:\n//    1. add class to body <body class=\"superPage\">\n//    2. add functions to the IFSLoader object IFSLoader = { superPage : init : function() {}};\n//\n// For now this will suffice, if complexity increases we might look at a more complex loader like requireJs.\n// Please think before adding javascript, this project should work without any of this scripts.\n\nif (typeof (IFS) === 'undefined') { var IFS = {} } // jshint ignore:line\nIFS.competitionManagement = {}\nIFS.competitionManagement.loadOrder = {\n  common: {\n    init: function () {\n      IFS.competitionManagement.various.init()\n    },\n    finalize: function () {\n      IFS.competitionManagement.multipageSelect.init()\n    }\n  },\n  'competition-management': {\n    init: function () {\n      IFS.competitionManagement.repeatableRows.init()\n    }\n  },\n  'competition-setup': {\n    init: function () {\n      IFS.competitionManagement.initialDetails.init()\n      IFS.competitionManagement.milestones.init()\n      IFS.competitionManagement.fundingInformation.init()\n      IFS.competitionManagement.repeater.init()\n      IFS.core.finance.init()\n    }\n  }\n}\n","IFS.competitionManagement.multipageSelect = (function () {\n  'use strict'\n  var s\n  return {\n    settings: {\n      multipageCheckboxEl: '[data-multipage-select] [type=\"checkbox\"]',\n      selectAllEl: '[data-multipage-select] [data-select-all]',\n      countEl: '[data-multipage-select] [data-count-selected]',\n      submitEl: '[data-multipage-select] [data-submit-el]',\n      totalListSizeEl: '[data-multipage-select][data-total-checkboxes]',\n      totalListSize: 0\n    },\n    init: function () {\n      s = this.settings\n      // caching the total list size once so we can do the changeSelectAllCheckboxState all selected check\n      s.totalListSize = parseInt(jQuery(s.totalListSizeEl).attr('data-total-checkboxes'))\n\n      jQuery('body').on('change', s.multipageCheckboxEl, function () {\n        IFS.competitionManagement.multipageSelect.processMultipageCheckbox(this)\n      })\n    },\n    getData: function (checked, value, isSelectAll) {\n      if (isSelectAll) {\n        return { 'addAll': checked }\n      } else {\n        return { 'assessor': value, 'isSelected': checked }\n      }\n    },\n    processMultipageCheckbox: function (checkbox) {\n      checkbox = jQuery(checkbox)\n      var isSelectAll = checkbox.is(s.selectAllEl)\n      var checked = checkbox.is(':checked')\n      var value = checkbox.val()\n      var data = IFS.competitionManagement.multipageSelect.getData(checked, value, isSelectAll)\n      var url = window.location.href\n\n      jQuery.ajaxProtected({\n        type: 'POST',\n        url: url,\n        data: data,\n        dataType: 'json',\n        timeout: IFS.core.autoSave.settings.ajaxTimeOut\n      }).done(function (result) {\n        if (isSelectAll) {\n          IFS.competitionManagement.multipageSelect.changeAllCheckboxStates(checked)\n        }\n        if (typeof (result.selectionCount) !== 'undefined') {\n          var selectedRows = parseInt(result.selectionCount)\n          IFS.competitionManagement.multipageSelect.updateCount(selectedRows)\n          IFS.competitionManagement.multipageSelect.updateSubmitButton(selectedRows)\n          if (!isSelectAll) {\n            IFS.competitionManagement.multipageSelect.changeSelectAllCheckboxState(selectedRows)\n          }\n        }\n      }).fail(function (data) {\n        var errorMessage = IFS.core.autoSave.getErrorMessage(data)\n        checkbox.closest('fieldset').find('legend').append('<span class=\"error-message\">' + errorMessage + '</span>')\n      })\n    },\n    updateSubmitButton: function (count) {\n      var button = jQuery(s.submitEl)\n      if (button.length) {\n        if (count > 0) {\n          button.removeProp('disabled')\n        } else {\n          button.prop('disabled', 'disabled')\n        }\n      }\n    },\n    updateCount: function (count) {\n      if (jQuery(s.countEl).length) {\n        jQuery(s.countEl).text(count)\n      }\n    },\n    changeSelectAllCheckboxState: function (count) {\n      // if all checkboxes are checked we also check the selectAll\n      var selectAll = jQuery(s.selectAllEl)\n      if (s.totalListSize === count) {\n        selectAll.prop('checked', 'checked')\n      } else {\n        selectAll.removeProp('checked')\n      }\n    },\n    changeAllCheckboxStates: function (selectAllChecked) {\n      var allCheckboxes = jQuery(s.multipageCheckboxEl)\n      if (selectAllChecked) {\n        allCheckboxes.prop('checked', 'checked')\n      } else {\n        allCheckboxes.removeProp('checked')\n      }\n    }\n  }\n})()\n","// Set up the handlers for adding and removing additional rows for inviting assessors\nIFS.competitionManagement.repeatableRows = (function () {\n  'use strict'\n\n  return {\n    init: function () {\n      // prevent 'enter' key adding new rows by changing button type\n      jQuery('button[data-repeatable-rowcontainer]').attr('type', 'button')\n\n      jQuery('body').on('click', '[data-repeatable-rowcontainer]', function (e) {\n        e.preventDefault()\n\n        IFS.competitionManagement.repeatableRows.addRow(this, e)\n      })\n      jQuery('body').on('click', '.remove-another-row', function (e) {\n        e.preventDefault()\n\n        IFS.competitionManagement.repeatableRows.removeRow(this, e)\n      })\n    },\n    addRow: function (el) {\n      var target = jQuery(el).attr('data-repeatable-rowcontainer')\n      var uniqueRowId = jQuery(target).children().length || 0\n      var newRow = jQuery('<tr>' +\n        '<td class=\"width-40-percent form-group\">' +\n        '<label></label>' +\n        '<input aria-labelledby=\"invite-label-assessor-name\" class=\"form-control width-full\" type=\"text\" ' +\n        'id=\"invites' + uniqueRowId + '.name\" ' +\n        'name=\"invites[' + uniqueRowId + '].name\" value=\"\" ' +\n        'data-required-errormessage=\"Please enter a name.\" required=\"required\" />' +\n        '</td>' +\n        '<td class=\"width-40-percent form-group\">' +\n        '<label></label>' +\n        '<input aria-labelledby=\"invite-label-assessor-email\" class=\"form-control width-full\" type=\"email\" ' +\n        'id=\"invites' + uniqueRowId + '.email\" ' +\n        'name=\"invites[' + uniqueRowId + '].email\" value=\"\" ' +\n        'data-required-errormessage=\"Please enter an email address.\" required=\"required\" />' +\n        '</td>' +\n        '<td class=\"alignright width-20-percent\">' +\n        '<button class=\"remove-another-row buttonlink\" name=\"removeNewUser\" type=\"button\" value=\"0\">Remove</button>' +\n        '</td>' +\n        '</tr>')\n\n      // insert the new row with the correct values and move focus to the first field to aid keyboard users\n      jQuery(target).append(newRow)\n      jQuery(newRow).find('input').first().focus()\n    },\n    removeRow: function (el) {\n      var $element = jQuery(el)\n      var rowParent = $element.closest('tbody')\n      var rows\n\n      // must remove row before getting row information to correctly count remaining rows\n      $element.closest('tr').remove()\n\n      rows = jQuery(rowParent).children()\n\n      // re-number rows to ensure no empty/missing data is created server-side\n      jQuery(rows).each(function (rowIndex) {\n        var rowsInputs = jQuery(this).find('input')\n\n        jQuery(rowsInputs).each(function () {\n          // regex will replace 1 or more numbers in the string with the new index value\n          var $rowInput = jQuery(this)\n          var newId = $rowInput.attr('id').replace(/\\d+/g, rowIndex)\n          var newName = $rowInput.attr('name').replace(/\\d+/g, rowIndex)\n\n          $rowInput.attr({\n            'id': newId,\n            'name': newName\n          })\n        })\n      })\n    }\n  }\n})()\n","IFS.competitionManagement.repeater = (function () {\n  'use strict'\n  return {\n    init: function () {\n      jQuery(document).on('click', '[data-add-row]', function () {\n        IFS.competitionManagement.repeater.handleAddRow(this)\n      })\n      jQuery(document).on('click', '[data-remove-row]', function () {\n        IFS.competitionManagement.repeater.handleRemoveRow(this)\n      })\n    },\n    // Add row\n    handleAddRow: function (el) {\n      var type = jQuery(el).attr('data-add-row')\n      switch (type) {\n        case 'cofunder':\n          IFS.competitionManagement.repeater.addCoFunder()\n          break\n        case 'guidance':\n          IFS.competitionManagement.repeater.addGuidanceRow()\n          break\n        case 'innovationArea':\n          IFS.competitionManagement.repeater.addInnovationAreaRow()\n          break\n        case 'contentGroup':\n          IFS.competitionManagement.repeater.addContentGroup(el)\n          break\n        case 'dateContentGroup':\n          IFS.competitionManagement.repeater.addDateContentGroup(el)\n          break\n      }\n      jQuery('body').trigger('updateSerializedFormState')\n      return false\n    },\n    // remove row\n    handleRemoveRow: function (el) {\n      var inst = jQuery(el)\n      var type = inst.attr('data-remove-row')\n      switch (type) {\n        case 'cofunder':\n          jQuery('[name=\"removeFunder\"]').val(inst.val())\n          IFS.core.autoSave.fieldChanged('[name=\"removeFunder\"]')\n          inst.closest('.funder-row').remove()\n          IFS.competitionManagement.repeater.reindexRows('.funder-row')\n          jQuery('body').trigger('recalculateAllFinances')\n          break\n        case 'guidance':\n          jQuery('[name=\"removeGuidanceRow\"]').val(inst.val())\n          IFS.core.autoSave.fieldChanged('[name=\"removeGuidanceRow\"]')\n          inst.closest('tr').remove()\n          IFS.competitionManagement.repeater.reindexRows('tr[id^=\"guidance-\"]')\n          break\n        case 'innovationArea':\n          inst.closest('[id^=\"innovation-row\"]').remove()\n          IFS.competitionManagement.repeater.reindexRows('.form-group[id^=\"innovation-row\"]')\n          IFS.competitionManagement.initialDetails.disableAlreadySelectedOptions()\n          IFS.competitionManagement.initialDetails.autosaveInnovationAreaIds()\n          IFS.competitionManagement.initialDetails.rebindInnovationAreas()\n          break\n        case 'contentGroup':\n          inst.closest('[id^=\"contentGroup-row-\"]').remove()\n          IFS.competitionManagement.repeater.reindexRows('[id^=\"contentGroup-row-\"]')\n          break\n        case 'dateContentGroup':\n          inst.closest('[id^=\"contentDateGroup-row-\"]').remove()\n          IFS.competitionManagement.repeater.reindexRows('[id^=\"contentDateGroup-row-\"]')\n          break\n      }\n    },\n    addInnovationAreaRow: function () {\n      var rows = jQuery('.form-group[id^=\"innovation-row\"]')\n\n      var count = rows.length\n      var idCount = parseInt(rows.last().prop('id').split('innovation-row-')[1], 10) + 1\n\n      var newRow = rows.first().clone()\n      // clear error messages\n      newRow.removeClass('error')\n      newRow.find('.error-message').remove()\n      // new row attribute\n      newRow.prop('id', 'innovation-row-' + idCount)\n      // fix label link\n      newRow.find('[id^=\"innovationAreaCategoryId\"]').prop('id', 'innovationAreaCategoryId-' + idCount)\n      newRow.find('[for^=\"innovationAreaCategoryId\"]').prop('for', 'innovationAreaCategoryId-' + idCount)\n\n      // set the first please select as selected\n      newRow.find('[selected]').removeAttr('selected')\n      newRow.find('[disabled]').first().attr('selected', '')\n\n      // hide new row label for styling\n      newRow.find('.form-label').children().addClass('visuallyhidden')\n      // change name attributes and empty values\n      newRow.find('[name]').prop('name', 'innovationAreaCategoryIds[' + count + ']').val('')\n      // add remove button\n      newRow.append('<button data-remove-row=\"innovationArea\" value=\"' + count + '\" class=\"buttonlink\" type=\"button\">Remove</button>')\n\n      rows.last().after(newRow)\n\n      IFS.competitionManagement.initialDetails.disableAlreadySelectedOptions()\n      IFS.competitionManagement.initialDetails.rebindInnovationAreas()\n    },\n    addContentGroup: function (buttonEl) {\n      var rows = jQuery('[id^=\"contentGroup-row-\"]')\n      var count = 0\n      var idCount = 0\n\n      if (rows.length) {\n        count = parseInt(rows.length, 10) // name attribute has to be 0,1,2,3\n        // id and for attributes have to be unique, gaps in count don't matter however I rather don't reindex all attributes on every remove, so we just higher the highest.\n        idCount = parseInt(rows.last().prop('id').split('contentGroup-row-')[1], 10) + 1\n      }\n      var headerRequiredErrorMessage = 'Please enter a heading.'\n      var contentRequiredErrorMessage = 'Please enter content.'\n\n      var html = '<div class=\"contentGroup\" id=\"contentGroup-row-' + idCount + '\">' +\n                    '<div class=\"form-group\">' +\n                      '<label class=\"form-label-bold\" for=\"heading-' + idCount + '\">Heading</label>' +\n                      '<input class=\"form-control\" id=\"heading-' + idCount + '\" type=\"text\" name=\"contentGroups[' + count + '].heading\" data-required-errormessage=\"' + headerRequiredErrorMessage + '\" required=\"required\" />' +\n                    '</div>' +\n                    '<div class=\"form-group textarea-wrapped\">' +\n                      '<label class=\"form-label-bold\" for=\"content-' + idCount + '\">Content</label>' +\n                          '<textarea id=\"content-' + idCount + '\" cols=\"30\" rows=\"10\" class=\"width-full form-control\" data-editor=\"html\" name=\"contentGroups[' + count + '].content\" data-required-errormessage=\"' + contentRequiredErrorMessage + '\" required=\"required\"></textarea>' +\n                      '</div>' +\n                    '<div class=\"form-group upload-section\">' +\n                        '<input type=\"file\" id=\"contentGroups-' + idCount + '.attachment\" class=\"inputfile\" name=\"contentGroups[' + count + '].attachment\" />' +\n                        '<label for=\"contentGroups-' + idCount + '.attachment\" class=\"button-secondary extra-margin\">+ Upload</label>' +\n                        '<button class=\"button-secondary\" type=\"submit\" name=\"uploadFile\" data-for-file-upload=\"contentGroups-' + idCount + '.attachment\" value=\"' + count + '\">Save</button>' +\n                        '<p class=\"uploaded-file\">No file currently uploaded</p>' +\n                    '</div>' +\n                    '<button type=\"button\" class=\"buttonlink no-margin\" data-remove-row=\"contentGroup\">Remove section</button>' +\n                  '</div>'\n      if (rows.length) {\n        rows.last().after(html)\n      } else {\n        jQuery(buttonEl).parent().before(html)\n      }\n      IFS.competitionManagement.repeater.initEditor('#content-' + idCount)\n    },\n    addDateContentGroup: function (buttonEl) {\n      var rows = jQuery('[id^=\"contentDateGroup-row-\"]')\n      var count = 0\n      var idCount = 0\n\n      if (rows.length) {\n        count = parseInt(rows.length, 10) // name attribute has to be 0,1,2,3\n        // id and for attributes have to be unique, gaps in count don't matter however I rather don't reindex all attributes on every remove, so we just higher the highest.\n        idCount = parseInt(rows.last().prop('id').split('contentDateGroup-row-')[1], 10) + 1\n      }\n      var validDateErrorMessage = 'Please enter a valid date.'\n\n      var html = '<div class=\"contentGroup\" id=\"contentDateGroup-row-' + idCount + '\">' +\n                 '<div class=\"form-group\"><fieldset>' +\n                    '<legend><span class=\"form-label form-label-bold\">Date</span></legend>' +\n                    '<div class=\"date-group\">' +\n                        '<input type=\"hidden\" disabled name=\"dates[' + count + '].combined\" />' +\n                        '<div class=\"day\">' +\n                            '<label class=\"form-label\" for=\"dates-' + idCount + '-day\">Day</label>' +\n                            '<input class=\"form-control width-extra-small\" placeholder=\"DD\" type=\"number\" id=\"dates-' + idCount + '-day\" name=\"dates[' + count + '].day\" min=\"1\" max=\"31\" required=\"required\"  data-required-errormessage=\"' + validDateErrorMessage + '\">' +\n                        '</div>' +\n                        '<div class=\"month\">' +\n                            '<label class=\"form-label\" for=\"dates-' + idCount + '-month\">Month</label>' +\n                            '<input class=\"form-control width-extra-small\" placeholder=\"MM\" type=\"number\" id=\"dates-' + idCount + '-month\" name=\"dates[' + count + '].month\" min=\"1\" max=\"12\" required=\"required\" data-required-errormessage=\"' + validDateErrorMessage + '\" />' +\n                        '</div>' +\n                        '<div class=\"year\">' +\n                            '<label class=\"form-label\" for=\"dates-' + idCount + '-year\">Year</label>' +\n                            '<input class=\"form-control width-extra-small\" placeholder=\"YYYY\" type=\"number\" id=\"dates-' + idCount + '-year\" name=\"dates[' + count + '].year\" min=\"1\" required=\"required\" data-required-errormessage=\"' + validDateErrorMessage + '\" />' +\n                        '</div>' +\n                    '</div>' +\n                '</fieldset></div>' +\n                '<div class=\"form-group textarea-wrapped\">' +\n                    '<label class=\"form-label\" for=\"dates-' + idCount + '-content\">' +\n                        '<span class=\"form-label-bold\">Content</span>' +\n                    '</label>' +\n                    '<textarea cols=\"30\" rows=\"5\" id=\"dates-' + idCount + '-content\" name=\"dates[' + count + '].content\" data-editor=\"html\" class=\"width-full form-control-error\" required=\"required\" th:attr=\"data-required-errormessage=#{validation.publiccontent.datesform.content.required}\"></textarea>' +\n                '</div>' +\n                '<div class=\"form-group\"><button class=\"buttonlink\" type=\"button\" data-remove-row=\"dateContentGroup\">Remove event</button></div>' +\n            '</div>'\n      if (rows.length) {\n        rows.last().after(html)\n      } else {\n        jQuery(buttonEl).parent().before(html)\n      }\n      IFS.competitionManagement.repeater.initEditor('#dates-' + idCount + '-content')\n    },\n    addCoFunder: function () {\n      var count = 0\n      var idCount = 0\n\n      if (jQuery('.funder-row').length) {\n        count = parseInt(jQuery('.funder-row').length, 10) // name attribute has to be 0,1,2,3\n        // id and for attributes have to be unique, gaps in count don't matter however I rather don't reindex all attributes on every remove, so we just higher the highest.\n        idCount = parseInt(jQuery('.funder-row[id^=funder-row-]').last().attr('id').split('funder-row-')[1], 10) + 1\n      }\n      var html = '<div class=\"grid-row funder-row\" id=\"funder-row-' + idCount + '\">' +\n                    '<div class=\"column-half\">' +\n                      '<div class=\"form-group\">' +\n                        '<input type=\"text\" maxlength=\"255\" data-maxlength-errormessage=\"Funders has a maximum length of 255 characters\" class=\"form-control width-x-large\" id=\"' + idCount + '-funder\" name=\"funders[' + count + '].funder\" value=\"\">' +\n                      '</div>' +\n                    '</div>' +\n                    '<div class=\"column-half\">' +\n                      '<div class=\"form-group\">' +\n                        '<input type=\"number\" min=\"0\" class=\"form-control width-x-large\" id=\"' + idCount + '-funderBudget\" name=\"funders[' + count + '].funderBudget\" value=\"\"><input required=\"required\" type=\"hidden\" id=\"' + idCount + '-coFunder\" name=\"funders[' + count + '].coFunder\" value=\"true\">' +\n                        '<button class=\"buttonlink\" name=\"remove-funder\" value=\"' + count + '\" data-remove-row=\"cofunder\">Remove</button>' +\n                      '</div>' +\n                    '</div>' +\n                  '</div>'\n      jQuery('.funder-row').last().after(html)\n    },\n    addGuidanceRow: function () {\n      var table = jQuery('#guidance-table')\n      var isAssessed = table.hasClass('assessed-guidance')\n      var count = 0\n      var idCount = 0\n\n      if (table.find('tbody tr').length) {\n        count = parseInt(table.find('tbody tr').length, 10) // name attribute has to be 0,1,2,3\n        // id and for attributes have to be unique, gaps in count don't matter however I rather don't reindex all attributes on every remove, so we just higher the highest.\n        idCount = parseInt(jQuery('tr[id^=guidance-]').last().attr('id').split('guidance-')[1], 10) + 1\n      }\n      var html = '<tr id=\"guidance-' + idCount + '\">'\n      if (isAssessed) {\n        html += '<td class=\"form-group\">' +\n                '<label class=\"form-label\" for=\"guidancerow-' + idCount + '-scorefrom\"><span class=\"visuallyhidden\">Score from</span></label>' +\n                '<input required=\"required\" type=\"number\" min=\"0\" class=\"form-control width-small\" data-required-errormessage=\"Please enter a from score.\" data-min-errormessage=\"Please enter a valid number.\" id=\"guidancerow-' + idCount + '-scorefrom\" name=\"guidanceRows[' + count + '].scoreFrom\" value=\"\">' +\n              '</td>' +\n              '<td class=\"form-group\">' +\n                '<label class=\"form-label\" for=\"guidancerow-' + idCount + '-scoreto\"><span class=\"visuallyhidden\">Score to</span></label>' +\n                '<input required=\"required\" type=\"number\" min=\"0\" class=\"form-control width-small\" value=\"\" data-required-errormessage=\"Please enter a to score.\" data-min-errormessage=\"Please enter a valid number.\" id=\"guidancerow-' + idCount + '-scoreto\" name=\"guidanceRows[' + count + '].scoreTo\" value=\"\">' +\n              '</td>'\n      } else {\n        html += '<td class=\"form-group\">' +\n                '<label class=\"form-label\" for=\"guidancerow-' + idCount + '-subject\"><span class=\"visuallyhidden\">Subject</span></label>' +\n                '<input required=\"required\" class=\"form-control width-small\" data-maxlength-errormessage=\"Subject has a maximum length of 255 characters.\" data-required-errormessage=\"Please enter a subject.\" id=\"guidancerow-' + idCount + '-subject\" name=\"question.guidanceRows[' + count + '].subject\" value=\"\">' +\n              '</td>'\n      }\n      html += '<td class=\"form-group\">' +\n              '<label class=\"form-label\" for=\"guidancerow-' + idCount + '-justification\"><span class=\"visuallyhidden\">Justification</span></label>' +\n              '<textarea required=\"required\" rows=\"3\" class=\"form-control width-full\" data-maxlength-errormessage=\"Justification has a maximum length of 255 characters.\" data-required-errormessage=\"Please enter a justification.\" id=\"guidancerow-' + count + '-justification\" name=\"' + (isAssessed ? '' : 'question.') + 'guidanceRows[' + count + '].justification\"></textarea>' +\n            '</td>' +\n            '<td><button class=\"buttonlink alignright remove-guidance-row\" name=\"remove-guidance-row\" data-remove-row=\"guidance\" value=\"' + count + '\">Remove</button></td>'\n      html += '</tr>'\n      table.find('tbody').append(html)\n    },\n    reindexRows: function (rowSelector) {\n      jQuery(rowSelector + ' [name]').each(function () {\n        var inst = jQuery(this)\n        if (inst.prop('name').indexOf('[') !== -1) {\n          var thisIndex = inst.closest(rowSelector).index(rowSelector)\n          var oldAttr = inst.attr('name')\n          var oldAttrName = oldAttr.split('[')[0]\n          var oldAttrElement = oldAttr.split(']')[1]\n          inst.prop('name', oldAttrName + '[' + thisIndex + ']' + oldAttrElement)\n        }\n      })\n      jQuery(rowSelector + ' [data-remove-row]').each(function () {\n        var inst = jQuery(this)\n        var thisIndex = inst.closest(rowSelector).index(rowSelector)\n        inst.val(thisIndex)\n      })\n    },\n    initEditor: function (el) {\n      var editor = IFS.core.editor.prepareEditorHTML(el)\n      // make a copy of the global wysiwyg-editor settings object and add the html link functionality\n      var editorOptions = jQuery.extend(true, {}, IFS.core.editor.settings.editorOptions, {\n        plugins: {'hallolink': {}}\n      })\n      jQuery(editor).hallo(editorOptions)\n    }\n  }\n})()\n","// TODO: divide over multiple files with purposes\nIFS.competitionManagement.various = (function () {\n  'use strict'\n  var s\n  return {\n    settings: {\n      fundingDecisionSelects: '.funding-decision',\n      assessorFeedbackButton: '#publish-assessor-feedback',\n      noJsAssessorFeedbackButton: '#publish-assessor-feedback-no-js',\n      submitFundingDecisionButton: '#publish-funding-decision',\n      noJsSubmitFundingDecisionButton: '#no-js-notify-applicants',\n      noJsSaveFundingDecisionButton: '#no-js-save-funding-decision',\n      fundingDecisionForm: '#submit-funding-decision-form'\n    },\n    init: function () {\n      s = this.settings\n\n      jQuery(document).on('change', s.fundingDecisionSelects, IFS.competitionManagement.various.handleFundingDecisionEnableOrDisable)\n      IFS.competitionManagement.various.handleFundingDecisionEnableOrDisable()\n      IFS.competitionManagement.various.alterSubmitDecisionFormAction()\n    },\n    disableFundingDecisonButton: function () {\n      var button = jQuery(s.submitFundingDecisionButton)\n      var modal = button.attr('data-js-modal')\n      // remove the modal action and add aria-disabled and disabled styling\n      button.on('click', function (event) { event.preventDefault() })\n      button.removeAttr('data-js-modal').attr({'data-js-modal-disabled': modal, 'aria-disabled': 'true'}).addClass('disabled')\n    },\n    enableFundingDecisionButton: function () {\n      var button = jQuery(s.submitFundingDecisionButton)\n      var modal = button.attr('data-js-modal-disabled')\n      button.off('click').removeAttr('data-js-modal-disabled aria-disabled').attr('data-js-modal', modal).removeClass('disabled')\n    },\n    alterSubmitDecisionFormAction: function () {\n      var form = jQuery(s.fundingDecisionForm)\n      var action = form.attr('action')\n      form.attr('action', action + 'submit')\n    },\n    allSelectsDecided: function () {\n      var selects = jQuery(s.fundingDecisionSelects)\n      if (selects === null || selects === undefined || selects.length === 0) {\n        return false\n      }\n\n      var allDecided = true\n      selects.each(function () {\n        var value = jQuery(this).val()\n        var decided = value === 'Y' || value === 'N'\n        if (!decided) {\n          allDecided = false\n        }\n      })\n\n      return allDecided\n    },\n    handleFundingDecisionEnableOrDisable: function () {\n      if (IFS.competitionManagement.various.allSelectsDecided()) {\n        IFS.competitionManagement.various.enableFundingDecisionButton()\n      } else {\n        IFS.competitionManagement.various.disableFundingDecisonButton()\n      }\n    }\n  }\n})()\n","IFS.competitionManagement.fundingInformation = (function () {\n  'use strict'\n  return {\n    init: function () {\n      jQuery('#generate-code').prop('type', 'button')\n      jQuery(document).on('click', '#generate-code', function () {\n        IFS.competitionManagement.fundingInformation.handleCompetitionCode(this)\n      })\n    },\n    handleCompetitionCode: function (el) {\n      var button = jQuery(el)\n      var competitionId = button.val()\n      var field = button.closest('.form-group').find('input')\n      var url = window.location.protocol + '//' + window.location.host + '/management/competition/setup/' + competitionId + '/generateCompetitionCode'\n      // todo ajax failure\n      jQuery.ajaxProtected({\n        type: 'GET',\n        url: url\n      }).done(function (data) {\n        if (typeof (data) !== 'undefined') {\n          if (data.success === 'true') {\n            IFS.core.formValidation.setValid(field, IFS.core.formValidation.getErrorMessage(field, 'required'))\n            field.val(data.message)\n            jQuery('body').trigger('updateSerializedFormState')\n          } else {\n            IFS.core.formValidation.setInvalid(field, data.message)\n          }\n        }\n      })\n    }\n  }\n})()\n","IFS.competitionManagement.initialDetails = (function () {\n  'use strict'\n  return {\n    init: function () {\n      jQuery('body.competition-management.competition-setup').on('change', '#competitionTypeId', function () {\n        IFS.competitionManagement.initialDetails.handleStateAid()\n      })\n      IFS.competitionManagement.initialDetails.handleInnovationSector(true)\n      jQuery('body.competition-management.competition-setup').on('change', '[name=\"innovationSectorCategoryId\"]', function () {\n        IFS.competitionManagement.initialDetails.handleInnovationSector(false)\n      })\n      IFS.competitionManagement.initialDetails.disableAlreadySelectedOptions()\n      IFS.competitionManagement.initialDetails.handleInnovationArea()\n      IFS.competitionManagement.initialDetails.rebindInnovationAreas()\n    },\n    rebindInnovationAreas: function () {\n      jQuery('.competition-management.competition-setup [name^=\"innovationAreaCategoryIds\"]').unbind('change')\n      jQuery('.competition-management.competition-setup').on('change', '[name^=\"innovationAreaCategoryIds\"]', function () {\n        IFS.competitionManagement.initialDetails.handleInnovationArea()\n        IFS.competitionManagement.initialDetails.disableAlreadySelectedOptions()\n        IFS.competitionManagement.initialDetails.autosaveInnovationAreaIds()\n      })\n    },\n    handleInnovationArea: function () {\n      var multipleRowsButton = jQuery('[data-add-row=\"innovationArea\"]')\n      var isShowingAll = IFS.competitionManagement.initialDetails.hasAllInnovationArea()\n\n      multipleRowsButton.attr('aria-hidden', isShowingAll)\n      if (isShowingAll) {\n        jQuery('[id*=\"innovation-row\"]').not('#innovation-row-0').remove()\n        IFS.competitionManagement.initialDetails.disableAlreadySelectedOptions()\n        jQuery('#innovation-row-0 select').val('-1')\n        IFS.competitionManagement.initialDetails.autosaveInnovationAreaIds()\n      }\n    },\n    hasAllInnovationArea: function () {\n      var hasAllInnovationArea = false\n      jQuery('[name^=\"innovationAreaCategoryIds\"]').each(function (index, el) {\n        if (jQuery(el).val() === '-1') {\n          hasAllInnovationArea = true\n          return false\n        }\n      })\n\n      return hasAllInnovationArea\n    },\n    handleInnovationSector: function (pageLoad) {\n      var sector = jQuery('[name=\"innovationSectorCategoryId\"]').val()\n      if (typeof (sector) === 'undefined' || sector === null) {\n        var innovationCategory = jQuery('[name*=\"innovationAreaCategoryId\"]')\n        innovationCategory.html('<option value=\"innovation sector\" disabled=\"disabled\" selected=\"selected\">Please select an innovation sector first &hellip;</option>')\n      } else {\n        var url = window.location.protocol + '//' + window.location.host + '/management/competition/setup/getInnovationArea/' + sector\n        jQuery.ajaxProtected({\n          type: 'GET',\n          url: url\n        }).done(function (areas) {\n          if (pageLoad) {\n            IFS.competitionManagement.initialDetails.filterInnovationAreasPageLoad(areas)\n          } else {\n            IFS.core.autoSave.fieldChanged('[name=\"innovationSectorCategoryId\"]')\n            IFS.competitionManagement.initialDetails.fillInnovationAreas(areas)\n            jQuery(innovationCategory).trigger('ifsValidate')\n          }\n        })\n      }\n    },\n    disableAlreadySelectedOptions: function () {\n      var disabledSections = {}\n      jQuery('[name*=\"innovationAreaCategoryId\"]').each(function () {\n        var inst = jQuery(this)\n        var value = inst.val()\n        var name = inst.prop('name')\n        if (value !== null) {\n          disabledSections[name] = value\n        }\n      })\n      jQuery('[name*=\"innovationAreaCategoryId\"]').find('[disabled]:not([value=\"\"])').removeAttr('disabled').removeAttr('aria-hidden')\n      for (var section in disabledSections) {\n        jQuery('[name*=\"innovationAreaCategoryId\"]:not([name=\"' + section + '\"]) option[value=\"' + disabledSections[section] + '\"]').attr({'disabled': 'disabled', 'aria-hidden': 'true'})\n      }\n    },\n    fillInnovationAreas: function (currentAreas) {\n      var innovationAreasFields = jQuery('[name*=\"innovationAreaCategoryId\"]')\n      jQuery.each(innovationAreasFields, function () {\n        var innovationAreasField = jQuery(this)\n        innovationAreasField.children().remove()\n        innovationAreasField.append('<option value=\"\" disabled=\"disabled\" selected=\"selected\">Please select &hellip;</option>')\n        jQuery.each(currentAreas, function () {\n          innovationAreasField.append('<option value=\"' + this.id + '\">' + this.name + '</option>')\n        })\n      })\n      IFS.competitionManagement.initialDetails.autosaveInnovationAreaIds()\n    },\n    autosaveInnovationAreaIds: function () {\n      // gets called whenever something changed in the list\n      var saveField = jQuery('[name=\"autosaveInnovationAreaIds\"]')\n      var innovationAreas = jQuery.unique(jQuery.map(jQuery('[name*=\"innovationAreaCategoryId\"]'), function (el) { return jQuery(el).val() }))\n      saveField.val(innovationAreas.join())\n      IFS.core.autoSave.fieldChanged(saveField)\n    },\n    filterInnovationAreasPageLoad: function (currentAreas) {\n      currentAreas = jQuery.map(currentAreas, function (area) {\n        return '[value=\"' + area.id + '\"]'\n      })\n      currentAreas.push('[value=\"\"]')\n      currentAreas = currentAreas.join(',')\n      var innovationAreas = jQuery('[name*=\"innovationAreaCategoryId\"] option')\n      innovationAreas.not(currentAreas).remove()\n    },\n    handleStateAid: function () {\n      var stateAid = jQuery('#competitionTypeId').find('[value=\"' + jQuery('#competitionTypeId').val() + '\"]').attr('data-stateaid')\n      if (stateAid === 'true') {\n        stateAid = 'yes'\n      } else {\n        stateAid = 'no'\n      }\n      jQuery('#stateAid').attr('aria-hidden', 'false').find('p').html('<span class=\"' + stateAid + '\">' + stateAid + '</span>')\n    }\n  }\n})()\n","IFS.competitionManagement.milestones = (function () {\n  'use strict'\n  var s\n  return {\n    settings: {\n      milestonesForm: '[data-section=\"milestones\"]'\n    },\n    init: function () {\n      s = this.settings\n\n      jQuery(s.milestonesForm).on('change', 'input[data-date]', function () {\n        IFS.competitionManagement.milestones.milestonesExtraValidation()\n        IFS.competitionManagement.milestones.milestonesSetFutureDate(jQuery(this))\n      })\n      IFS.competitionManagement.milestones.mileStoneValidateOnPageLoad()\n    },\n    milestonesExtraValidation: function () {\n      // some extra javascript to hide the server side messages when the field is valid\n      var fieldErrors = jQuery(s.milestonesForm + ' .form-control-error')\n      var emptyInputs = jQuery(s.milestonesForm + ' input').filter(function () { return !this.value })\n      if (fieldErrors.length === 0 && emptyInputs.length === 0) {\n        jQuery(s.milestonesForm + ' .error-summary').attr('aria-hidden', 'true')\n      }\n    },\n    mileStoneValidateOnPageLoad: function () {\n      jQuery(s.milestonesForm + ' .day input').each(function (index, value) {\n        var field = jQuery(value)\n        if (index === 0) {\n          IFS.core.formValidation.checkDate(field)\n        }\n        IFS.competitionManagement.milestones.milestonesSetFutureDate(field)\n      })\n    },\n    milestonesSetFutureDate: function (field) {\n      setTimeout(function () {\n        var currentRow = field.closest('tr')\n        var nextRow = currentRow.next('tr')\n        var date = field.attr('data-date')\n        var time\n        if (currentRow.find('.time select').length > 0) {\n          time = currentRow.find('.time option:selected').attr('data-time')\n        } else {\n          time = currentRow.find('.time [data-time]').attr('data-time')\n        }\n        if (nextRow.length) {\n          nextRow.attr({'data-future-date': date + (time !== undefined ? '-' + time : '')})\n          if (jQuery.trim(date.length) !== 0) {\n            var input = nextRow.find('.day input')\n            IFS.core.formValidation.checkDate(input)\n          }\n        }\n      }, 0)\n    }\n  }\n})()\n"]}