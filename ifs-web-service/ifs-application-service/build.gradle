bootRun {
    addResources = false
}

apply plugin: 'war'

configurations {
    providedRuntime
}

war {
    baseName = 'ifs-application-service'
}

dependencies {
    compile project(':ifs-web-service:ifs-web-core')

    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.springframework.plugin:spring-plugin-core"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.google.guava:guava:16.0.1"

    testCompile project(path: ':ifs-commons', configuration: 'forTesting')
    testCompile project(path: ':ifs-web-service:ifs-web-core', configuration: 'forTesting')

    testCompile "com.openpojo:openpojo:0.8.3"
    testCompile "org.skyscreamer:jsonassert:1.3.0"
}

task deployToTomcat(type: Copy) {
    from war
    into "$tomcatWebAppsDir"
    rename '(.*).war', 'ROOT.war'
}

task copyTemplatesInPlace(type: Copy) {
    into "$tomcatWebAppsDir/ROOT/WEB-INF/classes/templates"
    from 'src/main/resources/templates'
}

task copyCssInPlace(type: Copy) {
    into "$tomcatWebAppsDir/ROOT/WEB-INF/classes/static/css"
    from 'src/main/resources/static/css'
}

task copyJsInPlace(type: Copy) {
    into "$tomcatWebAppsDir/ROOT/WEB-INF/classes/static/js/dest"
    from 'src/main/resources/static/js/dest'
}

watch {
    java {
        files files('src/main/java')
        tasks('deployToTomcat')
    }

    templates {
        files files('src/main/resources/templates')
        tasks 'copyTemplatesInPlace'
    }

    css {
        files files('src/main/resources/static/css')
        tasks 'copyCssInPlace'
    }
    js {
        files files('src/main/resources/static/js/dest')
        tasks 'copyJsInPlace'
    }
}

processResources {
    filesMatching("*.properties") {
        expand project.properties
    }
}

processTestResources {
    filesMatching("*.properties") {
        expand project.properties
    }
}

task cleanDeploy() {
    inputs.dir 'src/main/java'
    outputs.dir 'build/classes/main'
    build.mustRunAfter clean
    deployToTomcat.mustRunAfter build
    dependsOn clean
    dependsOn build
    dependsOn deployToTomcat
}
