apply plugin: 'war'
configurations {
    providedRuntime
}

war {
    baseName = 'assessment'
}


bootRepackage {
    mainClass = 'org.innovateuk.ifs.Application'
}

dependencies {
    compile project(':ifs-web-service:ifs-web-core')

    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.springframework.plugin:spring-plugin-core"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.google.guava:guava:16.0.1"
    compile "commons-io:commons-io:2.4"

    testCompile project(':ifs-resources').sourceSets.test.output
    testCompile project(":ifs-commons").sourceSets.test.output
    testCompile project(':ifs-web-service:ifs-web-core').sourceSets.test.output
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task copyTemplatesInPlace(type: Copy) {
    into "$tomcatWebAppsDir/assessment/WEB-INF/classes/templates"
    from 'src/main/resources/templates'
}

task copyCssInPlace(type: Copy) {
    into "$tomcatWebAppsDir/assessment/WEB-INF/classes/static/css"
    from 'src/main/resources/static/css'
}

task copyJsInPlace(type: Copy) {
    into "$tomcatWebAppsDir/assessment/WEB-INF/classes/static/js/dest"
    from 'src/main/resources/static/js/dest'
}

task deployToTomcat(type: Copy) {
    from war
    into "$tomcatWebAppsDir"
    rename '(.*).war', 'assessment.war'
}

task buildDocker( type:Docker, dependsOn: build) {
    push = false
    applicationName = 'assessment-service'
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from war
            into stageDir
        }
    }
}

task cleanDeployServices() {
    build.mustRunAfter clean
    dependsOn clean
    dependsOn buildDocker
}

task cleanDeploy() {
    build.mustRunAfter clean
    deployToTomcat.mustRunAfter build
    dependsOn clean
    dependsOn build
    dependsOn deployToTomcat
}
