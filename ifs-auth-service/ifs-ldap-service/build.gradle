import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import org.apache.tools.ant.filters.ReplaceTokens

def String ldapCertsVolume = 'src/main/docker/certs'

def String ldapEncryptionKeyFile = "${ldapCertsVolume}/ldap-encryption.key"
def String ldapEncryptionCertificateFile = "${ldapCertsVolume}/ldap-encryption.crt"

def String ldapPassword = project.properties['auth.ldap.password'] ?:"default"

task prepareDockerFile {
    def inputDir = file("${project.buildDir}/docker")

    def String ldapEncryptionKey = file(ldapEncryptionKeyFile).text.trim().replace('\n', '\\n')
    def String ldapEncryptionCertificate = file(ldapEncryptionCertificateFile).text.trim().replace('\n', '\\n')

    doFirst {
        copy {
            from 'src/main/docker/'
            into 'src/main/docker/'
            include 'Dockerfile-template'
            rename 'Dockerfile-template', 'Dockerfile'
            filter(ReplaceTokens, tokens: [auth_ldap_password: ldapPassword,
                                           auth_ldap_encryption_key: ldapEncryptionKey,
                                           auth_ldap_encryption_certificate: ldapEncryptionCertificate])
        }
        copy {
          from file('src/main/docker/Dockerfile')
          into inputDir
        }
        copy {
            from fileTree('src/main/docker/scripts')
            into "${inputDir}/scripts"
        }
    }
}

task buildDocker(type: DockerBuildImage) {
    dependsOn prepareDockerFile

    tag = 'innovateuk/ldap-service:latest'
    inputDir = file("${project.buildDir}/docker")
}
